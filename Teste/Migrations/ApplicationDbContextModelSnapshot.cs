// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Teste.Data;

#nullable disable

namespace Teste.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Teste.Models.Inscricao", b =>
                {
                    b.Property<int>("IdInscricao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInscricao"));

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdLead")
                        .HasColumnType("int");

                    b.Property<int?>("IdOferta")
                        .HasColumnType("int");

                    b.Property<int?>("IdProcessoSeletivo")
                        .HasColumnType("int");

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdInscricao");

                    b.HasIndex("IdLead");

                    b.HasIndex("IdOferta");

                    b.HasIndex("IdProcessoSeletivo");

                    b.ToTable("Inscricoes");
                });

            modelBuilder.Entity("Teste.Models.Lead", b =>
                {
                    b.Property<int>("IdLead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLead"));

                    b.Property<int>("CPF")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefone")
                        .HasColumnType("int");

                    b.HasKey("IdLead");

                    b.ToTable("Leads");
                });

            modelBuilder.Entity("Teste.Models.Oferta", b =>
                {
                    b.Property<int>("IdOferta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOferta"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Vagas")
                        .HasColumnType("int");

                    b.HasKey("IdOferta");

                    b.ToTable("Ofertas");
                });

            modelBuilder.Entity("Teste.Models.ProcessoSeletivo", b =>
                {
                    b.Property<int>("IdProcessoSeletivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProcessoSeletivo"));

                    b.Property<DateTime>("DataDeInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeTermino")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProcessoSeletivo");

                    b.ToTable("ProcessosSeletivos");
                });

            modelBuilder.Entity("Teste.Models.Inscricao", b =>
                {
                    b.HasOne("Teste.Models.Lead", "Lead")
                        .WithMany()
                        .HasForeignKey("IdLead");

                    b.HasOne("Teste.Models.Oferta", "Oferta")
                        .WithMany()
                        .HasForeignKey("IdOferta");

                    b.HasOne("Teste.Models.ProcessoSeletivo", "ProcessoSeletivo")
                        .WithMany()
                        .HasForeignKey("IdProcessoSeletivo");

                    b.Navigation("Lead");

                    b.Navigation("Oferta");

                    b.Navigation("ProcessoSeletivo");
                });
#pragma warning restore 612, 618
        }
    }
}
